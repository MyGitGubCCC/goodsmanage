<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.mapper.LeaveschoolMapper" >
  <resultMap id="BaseResultMap" type="com.xzit.entity.Leaveschool" >
    <id column="leaveschoolid" property="leaveschoolid" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="INTEGER" />
    <result column="leavetime" property="leavetime" jdbcType="TIMESTAMP" />
    <result column="backtime" property="backtime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <association property="student"
                 javaType="com.xzit.entity.Student"
                 select="com.xzit.mapper.StudentMapper.selectByPrimaryKey"
                 column="sid"
                 fetchType="eager"></association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    leaveschoolid, sid, leavetime, backtime, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xzit.entity.LeaveschoolExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from leaveschool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from leaveschool
    where leaveschoolid = #{leaveschoolid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from leaveschool
    where leaveschoolid = #{leaveschoolid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzit.entity.LeaveschoolExample" >
    delete from leaveschool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzit.entity.Leaveschool" >
    insert into leaveschool (leaveschoolid, sid, leavetime, 
      backtime, remark)
    values (#{leaveschoolid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{leavetime,jdbcType=TIMESTAMP}, 
      #{backtime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xzit.entity.Leaveschool" >
    insert into leaveschool
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="leaveschoolid != null" >
        leaveschoolid,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="leavetime != null" >
        leavetime,
      </if>
      <if test="backtime != null" >
        backtime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="leaveschoolid != null" >
        #{leaveschoolid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="leavetime != null" >
        #{leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="backtime != null" >
        #{backtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzit.entity.LeaveschoolExample" resultType="java.lang.Integer" >
    select count(*) from leaveschool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update leaveschool
    <set >
      <if test="record.leaveschoolid != null" >
        leaveschoolid = #{record.leaveschoolid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.leavetime != null" >
        leavetime = #{record.leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backtime != null" >
        backtime = #{record.backtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update leaveschool
    set leaveschoolid = #{record.leaveschoolid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      leavetime = #{record.leavetime,jdbcType=TIMESTAMP},
      backtime = #{record.backtime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzit.entity.Leaveschool" >
    update leaveschool
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="leavetime != null" >
        leavetime = #{leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="backtime != null" >
        backtime = #{backtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where leaveschoolid = #{leaveschoolid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzit.entity.Leaveschool" >
    update leaveschool
    set sid = #{sid,jdbcType=INTEGER},
      leavetime = #{leavetime,jdbcType=TIMESTAMP},
      backtime = #{backtime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where leaveschoolid = #{leaveschoolid,jdbcType=INTEGER}
  </update>
  <select id="selectLastLeavesSchoolBySno" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * from leaveschool,student
    where leaveschool.sid = student.sid
    and sno = #{sno}
    order by leaveschoolid
    desc limit 1
  </select>
  <select id="selectLeaveSchool" resultMap="BaseResultMap" >
    SELECT leaveschoolid,leaveschool.sid,leavetime,backtime,remark from leaveschool,student
    where leaveschool.sid = student.sid
    <if test="student.sno != null and student.sno !=''" >
      and (student.sno = #{student.sno} or student.cardno = #{student.sno})
    </if>
    <if test="student.sname != null and student.sname !=''" >
      and student.sname like  "%"#{student.sname}"%"
    </if>
    <if test="student.homeadress != null and student.homeadress !=''" >
      and student.homeadress like  "%"#{student.homeadress}"%"
    </if>
    <if test="student.buildingid != 0 and student.buildingid !=null" >
      and student.buildingid =#{student.buildingid}
    </if>
    <if test="student.dormitoryid != 0 and student.dormitoryid != null" >
      and student.dormitoryid =#{student.dormitoryid}
    </if>
    <if test="leavestarttime != null and leavestarttime !=''" >
      and leaveschool.leavetime >= #{leavestarttime}
    </if>
    <if test="leaveendtime != null and leaveendtime !=''" >
      and leaveschool.leavetime &lt;= #{leaveendtime}
    </if>
    <choose>
      <when test="notbackschool ==1">
        and isnull( leaveschool.backtime)
      </when>
      <otherwise>
        <if test="backstarttime != null and backstarttime !=''" >
          and leaveschool.backtime >= #{backstarttime}
        </if>
        <if test="backendtime != null and backendtime !=''" >
          and leaveschool.backtime &lt;= #{backendtime}
        </if>
      </otherwise>
    </choose>
    <if test="timesort == 1" >
      order by leaveschoolid desc
    </if>

  </select>
</mapper>